/** GENERATED BY OBSIDIAN-PLUGIN-CLI, DO NOT EDIT */
var P=Object.create;var f=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var R=Object.getOwnPropertyNames;var L=Object.getPrototypeOf,K=Object.prototype.hasOwnProperty;var N=e=>f(e,"__esModule",{value:!0});var k=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Y=(e,t)=>{N(e);for(var o in t)f(e,o,{get:t[o],enumerable:!0})},M=(e,t,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of R(t))!K.call(e,n)&&n!=="default"&&f(e,n,{get:()=>t[n],enumerable:!(o=$(t,n))||o.enumerable});return e},E=e=>M(N(f(e!=null?P(L(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);var T=k((oe,B)=>{B.exports={name:"dotenv",version:"16.4.5",description:"Loads environment variables from .env file",main:"lib/main.js",types:"lib/main.d.ts",exports:{".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},scripts:{"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard","lint-readme":"standard-markdown",pretest:"npm run lint && npm run dts-check",test:"tap tests/*.js --100 -Rspec","test:coverage":"tap --coverage-report=lcov",prerelease:"npm test",release:"standard-version"},repository:{type:"git",url:"git://github.com/motdotla/dotenv.git"},funding:"https://dotenvx.com",keywords:["dotenv","env",".env","environment","variables","config","settings"],readmeFilename:"README.md",license:"BSD-2-Clause",devDependencies:{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3",decache:"^4.6.1",sinon:"^14.0.1",standard:"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0",tap:"^16.3.0",tar:"^6.1.11",typescript:"^4.8.4"},engines:{node:">=12"},browser:{fs:!1}}});var V=k((se,u)=>{var m=require("fs"),y=require("path"),U=require("os"),F=require("crypto"),q=T(),b=q.version,W=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function G(e){let t={},o=e.toString();o=o.replace(/\r\n?/mg,`
`);let n;for(;(n=W.exec(o))!=null;){let a=n[1],r=n[2]||"";r=r.trim();let s=r[0];r=r.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),s==='"'&&(r=r.replace(/\\n/g,`
`),r=r.replace(/\\r/g,"\r")),t[a]=r}return t}function H(e){let t=x(e),o=l.configDotenv({path:t});if(!o.parsed){let s=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw s.code="MISSING_DATA",s}let n=C(e).split(","),a=n.length,r;for(let s=0;s<a;s++)try{let i=n[s].trim(),c=z(o,i);r=l.decrypt(c.ciphertext,c.key);break}catch(i){if(s+1>=a)throw i}return l.parse(r)}function J(e){console.log(`[dotenv@${b}][INFO] ${e}`)}function Q(e){console.log(`[dotenv@${b}][WARN] ${e}`)}function v(e){console.log(`[dotenv@${b}][DEBUG] ${e}`)}function C(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function z(e,t){let o;try{o=new URL(t)}catch(i){if(i.code==="ERR_INVALID_URL"){let c=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw c.code="INVALID_DOTENV_KEY",c}throw i}let n=o.password;if(!n){let i=new Error("INVALID_DOTENV_KEY: Missing key part");throw i.code="INVALID_DOTENV_KEY",i}let a=o.searchParams.get("environment");if(!a){let i=new Error("INVALID_DOTENV_KEY: Missing environment part");throw i.code="INVALID_DOTENV_KEY",i}let r=`DOTENV_VAULT_${a.toUpperCase()}`,s=e.parsed[r];if(!s){let i=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${r} in your .env.vault file.`);throw i.code="NOT_FOUND_DOTENV_ENVIRONMENT",i}return{ciphertext:s,key:n}}function x(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(let o of e.path)m.existsSync(o)&&(t=o.endsWith(".vault")?o:`${o}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=y.resolve(process.cwd(),".env.vault");return m.existsSync(t)?t:null}function O(e){return e[0]==="~"?y.join(U.homedir(),e.slice(1)):e}function X(e){J("Loading env from encrypted .env.vault");let t=l._parseVault(e),o=process.env;return e&&e.processEnv!=null&&(o=e.processEnv),l.populate(o,t,e),{parsed:t}}function Z(e){let t=y.resolve(process.cwd(),".env"),o="utf8",n=Boolean(e&&e.debug);e&&e.encoding?o=e.encoding:n&&v("No encoding is specified. UTF-8 is used by default");let a=[t];if(e&&e.path)if(!Array.isArray(e.path))a=[O(e.path)];else{a=[];for(let c of e.path)a.push(O(c))}let r,s={};for(let c of a)try{let d=l.parse(m.readFileSync(c,{encoding:o}));l.populate(s,d,e)}catch(d){n&&v(`Failed to load ${c} ${d.message}`),r=d}let i=process.env;return e&&e.processEnv!=null&&(i=e.processEnv),l.populate(i,s,e),r?{parsed:s,error:r}:{parsed:s}}function ee(e){if(C(e).length===0)return l.configDotenv(e);let t=x(e);return t?l._configVault(e):(Q(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`),l.configDotenv(e))}function te(e,t){let o=Buffer.from(t.slice(-64),"hex"),n=Buffer.from(e,"base64"),a=n.subarray(0,12),r=n.subarray(-16);n=n.subarray(12,-16);try{let s=F.createDecipheriv("aes-256-gcm",o,a);return s.setAuthTag(r),`${s.update(n)}${s.final()}`}catch(s){let i=s instanceof RangeError,c=s.message==="Invalid key length",d=s.message==="Unsupported state or unable to authenticate data";if(i||c){let g=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw g.code="INVALID_DOTENV_KEY",g}else if(d){let g=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw g.code="DECRYPTION_FAILED",g}else throw s}}function ne(e,t,o={}){let n=Boolean(o&&o.debug),a=Boolean(o&&o.override);if(typeof t!="object"){let r=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw r.code="OBJECT_REQUIRED",r}for(let r of Object.keys(t))Object.prototype.hasOwnProperty.call(e,r)?(a===!0&&(e[r]=t[r]),n&&v(a===!0?`"${r}" is already defined and WAS overwritten`:`"${r}" is already defined and was NOT overwritten`)):e[r]=t[r]}var l={configDotenv:Z,_configVault:X,_parseVault:H,config:ee,decrypt:te,parse:G,populate:ne};u.exports.configDotenv=l.configDotenv;u.exports._configVault=l._configVault;u.exports._parseVault=l._parseVault;u.exports.config=l.config;u.exports.decrypt=l.decrypt;u.exports.parse=l.parse;u.exports.populate=l.populate;u.exports=l});Y(exports,{default:()=>_});var p=E(require("obsidian")),S=E(V());var I={showOnExport:!0};var h=E(require("obsidian")),w=class extends h.PluginSettingTab{constructor(t,o){super(t,o);this.plugin=o}display(){this.containerEl.empty(),new h.Setting(this.containerEl).setName("Show in export").setDesc("Whether to reveal the spoiler contents when exporting the file").addToggle(t=>{t.setValue(this.plugin.settings.showOnExport),t.onChange(async o=>{this.plugin.settings.showOnExport=o,await this.plugin.saveSettings()})})}};var _=class extends p.Plugin{async onload(){await this.loadSettings(),this.addSettingTab(new w(this.app,this)),this.addCommand({id:"spoiler-plain-text",name:"Create spoiler - Plain text",editorCallback:n=>{n.replaceRange("```spoiler\n\n```",n.getCursor())}}),this.addCommand({id:"spoiler-markdown",name:"Create spoiler - Markdown",editorCallback:n=>{n.replaceRange("```spoiler-markdown\n\n```",n.getCursor())}}),this.addCommand({id:"spoiler-env",name:"Create spoiler - Env",editorCallback:n=>{n.replaceRange("```spoiler-env\n\n```",n.getCursor())}});let t=(n,a)=>{let r=n.createEl("div",{cls:"spoiler__cover"});this.settings.showOnExport&&r.addClass("spoiler__cover--export__reveal"),r.createEl("p",{text:"Content hidden"});let s=n.createEl("div",{cls:"spoiler-toolbar"});new p.ButtonComponent(s).setIcon("eye").setClass("spoiler-button").setTooltip("Click to reveal").onClick(function(i){i.stopPropagation(),r.toggleAttribute("data-visible")}),new p.ButtonComponent(s).setIcon("copy").setClass("spoiler-button").setTooltip("Copy to clipboard").onClick(function(i){i.stopPropagation(),navigator.clipboard.writeText(a)})},o=n=>n.createEl("div",{cls:"spoiler"});this.registerMarkdownCodeBlockProcessor("spoiler",(n,a)=>{let r=o(a);n.split(`
`).forEach(s=>r.createEl("div",{text:s})),t(r,n)}),this.registerMarkdownCodeBlockProcessor("spoiler-markdown",(n,a,r)=>{let s=o(a),i=new p.Component;p.MarkdownRenderer.render(this.app,n,s,r.sourcePath,i),t(s,n)}),this.registerMarkdownCodeBlockProcessor("spoiler-env",(n,a)=>{let r=o(a),s=(0,S.parse)(n),c=r.createEl("table",{cls:"spoiler-table"}).createEl("tbody");for(let[d,g]of Object.entries(s)){let D=c.createEl("tr"),A=D.createEl("td",{text:d,cls:"spoiler-table-cell"}),j=D.createEl("td",{text:g,cls:"spoiler-table-cell"});new p.ButtonComponent(A).setIcon("copy").setClass("spoiler-table-copy").setTooltip("Copy key").onClick(function(){navigator.clipboard.writeText(d)}),new p.ButtonComponent(j).setIcon("copy").setClass("spoiler-table-copy").setTooltip("Copy value").onClick(function(){navigator.clipboard.writeText(g)})}t(r,n)})}async loadSettings(){this.settings=Object.assign({},I,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}};


/* nosourcemap */